/*
 * Jade/Slim-style micro-templating in Javascript
 * Copyright (c) Clifford Heath 2012. MIT License.
 */
//https://github.com/umdjs/umd/blob/master/returnExports.js#L40-L60
;(function (root, factory) {
    if (typeof exports === 'object') {
        // node.js / browserify
        module.exports = factory();
    } else if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define(factory);
    } else {
        // Browser globals (root is window)
        root.Semper = factory();
  }
}(this, function () {
  var parse =
    function (text) {
      var splitLinesRE = 
	  // Bah, negative look-behind doesn't work: Split up lines where they don't have a trailing backslash
	  // /(?!\\)\r*\n\r*/
	  /\r*\n\r*/,
	  /*
	   * Regular expression to split up each line.
	   *
	   * Here, I'll explain it for you:
	    ^			Start at the start of the line
	    (\s*)		Match all the leading white-space
	    (			Group everything else as match[1]
	      (			Group the first word (the 'cmd'), which is one of:
		\+		a plus sign,, for data drill-down
	      |	!!!		a triple-bang, for the <html> tag
	      |	\/\/		two slashes to introduce a comment
	      |	\|		a pipe symbol, for literal text with interpolations
	      | [#.a-zA-Z]	An alphanumeric tag, usually for an HTML element
		(?:		Tags may contain or start with # and . for id/class
		  [-#._a-zA-Z0-9]*  Continues with alphanumeric, or -.#_
		  [_a-zA-Z0-9]	Must end with alphanumeric or underscore
		)?
	      )?		the cmd is optional
	      (?:		Group an optional attribute list, but don't return it whole
		\(		an actual parenthesis
		(		return the contents in a match group 'attrs'
		  (?:		group alternates, but don't return them
		    '[^']*'	a single-quoted string
		  | "[^"]*"	a double-quoted string
		  | [^)]	Anything except a closing parenthesis
		  )*		The above group, repeated as many times as necessary
		)
		\)		The closing parenthesis
	      )?		The entire attribute list is optional
	      (			Group and return alternate forms of "operator"
		!?		an optional bang and
		[-.=:]		one of these characters
	      |  =		a literal space followed by an equals sign
	      )?		The whole operator is optional
	      )			
	      \s*		any amount of space
	      (.*)		The "rest"
	    )
	   */
	  re = /^(\s*)((\+|!!!|\/\/|\||[a-zA-Z#.](?:[-#._a-zA-Z0-9]*[_a-zA-Z0-9])?)?(?:\(((?:'[^']*'|"[^"]*"|[^)])*)\))?(!?[-.=:]| =)?\s*(.*))/,

	  // Simple string width calculator with tab expansion
	  textWidth = function(text) {
	    var i, c = 0;
	    for (i = 0; i < text.length; i++) {
	      if (text.charAt(i) === '\t')
		c = (c+8)&~0x7;
	      else
		c++;
	    }
	    return c;
	  },
	  parsed = [],				// Array of parsed output expressions
	  s = [], t,
	  pop = function(l) {
	    while ((t = s[s.length-1]) && t.level >= l)
	      s.pop().size = parsed.length-t.pos;// Subtree size includes the current instruction
	  },
	  push = function(o) {			// Push a compiled instruction, calculating subtree size
	    if (o.nw === '') return;		// Disregard blank lines
	    o.pos = parsed.length;		// Record the position of this instruction
	    pop(o.level);
	    parsed.push(o);
	    s.push(o);
	  },
	  parseLine = function(text, row, w) {	// Parse text and emit the output expressions
	    var m = re.exec(text);
	    if (m) {
	      var nested = m[5] == ':',
		  rest = nested ? '' : m[6];	// Indexes into 'm' depend on the regexp above
	      w = w || textWidth(m[1]);
	      push({
		level: w,			// The width of the leading white-space
		nw: m[2],			// all following the leading whitespace
		cmd: m[3],			// The leading word or token
		attrs: m[4]||'',		// The contents of a parenthesised attribute list
		op: m[5],			// A trailing op
		rest: rest,			// Rest of the line of text
		row: row			// Line number in the input
	      });
	      if (nested)			// A sub-statement seperated by a colon
		parseLine(m[6], row, w+2);	// Default to 2 additional indent levels
	    }
	    // Uncomment this for complaints about bad template lines:
	    else if (text.length > 0) console.log("Unmatched at "+(row+1)+": '"+text+"'");
	  };

      // Compile the template by splitting it into lines and parsing each line:
      text.split(splitLinesRE).forEach(function(line,row) { parseLine(line, row); });
      pop(0);
      return parsed;
    };

  var expand = 
    function(
	template,		// The template is an array of instructions
	subtree			// subtree is which subtree to process, or all
	// vars			// The last argument passed is a data context for expression evaluation
      ) {
      var args = Array.prototype.slice.call(arguments, 1),
	  lastarg = args[args.length-1],	// Get initial vars from the arguments
	  vars = lastarg,
	  current = vars,			// The data current we drilled-down to
          first = (subtree || 0),		// Default to processing the entire template
	  limit = subtree ? template[subtree].size : template.length,
	  escape = function(t) {		// Minimal HTML escaping function. If you care, extend it.
	    return t.split(/(['"&<>])/).
	      map(function(f) {
		return {
		  '"': "&quot;",
		  '<': "&lt;",
		  '>': "&gt;",
		  '&': "&amp;"
		}[f] || f;
	      }).join('');
	  },
	  evaluate = function(t, row) {	// Evaluate code in the context of current
	    with (current) {
	      try {
		return eval(t);
	      } catch (e) {
		console.log("At "+(row+1)+": Error evaluating '"+t+"': "+e.text+" in the context of ", current);
		return '';
	      }
	    }
	  },
	  substitute = function(t, row) {	// Perform expansion of #{...} inside text
	    return t.
	      // Split the text around #{...}, taking care with embedded JS string constants
	      // If you don't like #{...}, feel free to tweak this regexp.
	      // What? You want me to explain this one also?
	      split(/(#\{(?:'(?:\\'|[^'])*'|"(?:\\"|[^"])*"|\{[^}]*}|[^}])*)\}/).
	      map(function(f) {
		if (f.substr(0,2) != '#{')  // } to match the open one
		  return f;
		return escape(evaluate(f.substr(2), row));
	      }).
	      join('');
	  },
	  stack = [];			// The stack; contains closing tags and parsing mode


      return template.			// Map each line of the template into output
	slice(first, first+limit).	// Process just the requested part
	map(function(i) {		// Walk through each instruction
	  with (i) {
	    var top = null,		// Reference to the top of the stack
		text = '';

	    if (nw === '')
	      return '';

	    // Pop back to the level of the current line, emitting closing tags
	    while ((top = stack[stack.length-1]) && top.level >= level) {
	      var popped = stack.pop();
	      current = popped.current || current;
	      text += popped.close;
	    }

	    // top is either now undefined or contains the top item from the stack
	    var mode = (top && top.mode) || 'normal';
	    switch (mode) {
	    case 'normal':
	      switch (true) {
	      case '!!!' == cmd:    // REVISIT: attrs, op, rest all ignored
		text += "<!DOCTYPE html>\n";
		break;

	      case ' =' == op:    // Assign a variable
		current[cmd] = evaluate(rest, row);
		break;

	      case '+' == cmd:
		stack.push({level: level, close:'', current: current});
		current = evaluate(rest, row);
		break;

	      case '|' == cmd:	// Literal text, single and multi-line
		if (rest === '')
		  stack.push({level: level, close:'', mode: 'text'});
		else
		  text +=
		    substitute(nw.substr(2), row) +
		    "\n";
		break;

	      // Iteration:
	      case cmd == 'each':
		current.forEach(function(v) {
		  text += expand(template, template[pos+1].pos, v);
		});
		top['mode'] = 'skip';
		break;

	      // Conditionals:
	      case cmd == 'empty' || cmd == 'present':
		if ((cmd == 'empty') == (!current || (typeof current === 'object' && current.length === 0)))
		  text += expand(template, template[pos+1].pos, current);
		stack.push({level: level, close:'', mode: 'skip'});
		break;

	      // Tags:
	      case cmd && (/^[a-zA-Z.#]/.test(cmd)):
		// Figure out the tag, id and classes
		var tag = 'div';
		var id = null;
		var classes = '';
		cmd.split(/(?=[#.])/).forEach(function(v) {
		  if (v == '.')
		    ; // Just a div, no class or id
		  else if (v[0] === '.')
		    classes += " "+v.substr(1);
		  else if (v[0] === '#')
		    id = v.substr(1);   // Blow away a previous ID if they used two
		  else
		    tag = v;
		});

		text +=
		  "<"+
		  tag+
		  (id === null ? '' : ' id="'+id+'"') +
		  (classes === '' ? '' : ' class="'+classes.trim()+'"') +
		  (attrs ? ' '+substitute(attrs, row) : '') +
		  ">";

		// Deal with the tag content:
		stack.push(top = {level: level, close: "</"+tag+">\n"});
		var evaled = '';
		switch (op) {
		case '.':	  // Text block follows
		  top['mode'] = 'text';
		  break;
		case '!=':  // code yielding unescaped output
		case '=':	  // code yielding escaped output
		case '-':	  // code whose output is ignored
		  top['mode'] = 'skip';
		  if (rest)
		    evaled = evaluate(rest, row);
		  if (op === '=')
		    evaled = escape(evaled);
		  if (op !== '-')
		    text += evaled;
		  top['mode'] = 'text';
		  break;
		case undefined:
		case '':
		  text += (rest === '' ? '\n' : substitute(rest, row));
		}
		break;

	      // Comment
	      case '//' == cmd:
		if (rest === '') {
		  stack.push(top = {level: level, close: '-->\n', mode: 'text'});
		  if (op === '-') {
		    top.mode = 'skip';
		    top.close = '';
		  } else
		    text += "<!--\n";
		} else if (op !== '-')
		  text += "<!-- "+rest+" -->\n";
		break;

	      default:
		throw "Unrecognised command at line "+(row+1)+': '+nw;
	      }
	      break;

	    case 'text':  // mode of a multi-line | or comment
	      if (!top.textDepth)
		top.textDepth = level;
	      text +=     // handle additional indentation
		new Array(level-top.textDepth).join(' ') + escape(substitute(nw, row)) + "\n";
	      break;

/* Unnecessary; any unknown mode means skip
	    case 'skip': // After //-
	      break;
 */
	    }
	    return text;
	  }
	}).
	join('') +
	stack.reverse().map(function(v){return v.close;}).join('');
    };

    return { parse: parse, expand: expand };
  }
));

!function(e){e(function(){"use strict";e.support.transition=function(){var e=function(){var e=document.createElement("bootstrap"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",msTransition:"MSTransitionEnd",transition:"transitionend"},n;for(n in t)if(e.style[n]!==undefined)return t[n]}();return e&&{end:e}}()})}(window.jQuery),!function(e){"use strict";var t='[data-dismiss="alert"]',n=function(n){e(n).on("click",t,this.close)};n.prototype.close=function(t){function s(){i.trigger("closed").remove()}var n=e(this),r=n.attr("data-target"),i;r||(r=n.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,"")),i=e(r),t&&t.preventDefault(),i.length||(i=n.hasClass("alert")?n:n.parent()),i.trigger(t=e.Event("close"));if(t.isDefaultPrevented())return;i.removeClass("in"),e.support.transition&&i.hasClass("fade")?i.on(e.support.transition.end,s):s()},e.fn.alert=function(t){return this.each(function(){var r=e(this),i=r.data("alert");i||r.data("alert",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.alert.Constructor=n,e(function(){e("body").on("click.alert.data-api",t,n.prototype.close)})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.button.defaults,n)};t.prototype.setState=function(e){var t="disabled",n=this.$element,r=n.data(),i=n.is("input")?"val":"html";e+="Text",r.resetText||n.data("resetText",n[i]()),n[i](r[e]||this.options[e]),setTimeout(function(){e=="loadingText"?n.addClass(t).attr(t,t):n.removeClass(t).removeAttr(t)},0)},t.prototype.toggle=function(){var e=this.$element.parent('[data-toggle="buttons-radio"]');e&&e.find(".active").removeClass("active"),this.$element.toggleClass("active")},e.fn.button=function(n){return this.each(function(){var r=e(this),i=r.data("button"),s=typeof n=="object"&&n;i||r.data("button",i=new t(this,s)),n=="toggle"?i.toggle():n&&i.setState(n)})},e.fn.button.defaults={loadingText:"loading..."},e.fn.button.Constructor=t,e(function(){e("body").on("click.button.data-api","[data-toggle^=button]",function(t){var n=e(t.target);n.hasClass("btn")||(n=n.closest(".btn")),n.button("toggle")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=n,this.options.slide&&this.slide(this.options.slide),this.options.pause=="hover"&&this.$element.on("mouseenter",e.proxy(this.pause,this)).on("mouseleave",e.proxy(this.cycle,this))};t.prototype={cycle:function(t){return t||(this.paused=!1),this.options.interval&&!this.paused&&(this.interval=setInterval(e.proxy(this.next,this),this.options.interval)),this},to:function(t){var n=this.$element.find(".active"),r=n.parent().children(),i=r.index(n),s=this;if(t>r.length-1||t<0)return;return this.sliding?this.$element.one("slid",function(){s.to(t)}):i==t?this.pause().cycle():this.slide(t>i?"next":"prev",e(r[t]))},pause:function(e){return e||(this.paused=!0),clearInterval(this.interval),this.interval=null,this},next:function(){if(this.sliding)return;return this.slide("next")},prev:function(){if(this.sliding)return;return this.slide("prev")},slide:function(t,n){var r=this.$element.find(".active"),i=n||r[t](),s=this.interval,o=t=="next"?"left":"right",u=t=="next"?"first":"last",a=this,f=e.Event("slide");this.sliding=!0,s&&this.pause(),i=i.length?i:this.$element.find(".item")[u]();if(i.hasClass("active"))return;if(e.support.transition&&this.$element.hasClass("slide")){this.$element.trigger(f);if(f.isDefaultPrevented())return;i.addClass(t),i[0].offsetWidth,r.addClass(o),i.addClass(o),this.$element.one(e.support.transition.end,function(){i.removeClass([t,o].join(" ")).addClass("active"),r.removeClass(["active",o].join(" ")),a.sliding=!1,setTimeout(function(){a.$element.trigger("slid")},0)})}else{this.$element.trigger(f);if(f.isDefaultPrevented())return;r.removeClass("active"),i.addClass("active"),this.sliding=!1,this.$element.trigger("slid")}return s&&this.cycle(),this}},e.fn.carousel=function(n){return this.each(function(){var r=e(this),i=r.data("carousel"),s=e.extend({},e.fn.carousel.defaults,typeof n=="object"&&n);i||r.data("carousel",i=new t(this,s)),typeof n=="number"?i.to(n):typeof n=="string"||(n=s.slide)?i[n]():s.interval&&i.cycle()})},e.fn.carousel.defaults={interval:5e3,pause:"hover"},e.fn.carousel.Constructor=t,e(function(){e("body").on("click.carousel.data-api","[data-slide]",function(t){var n=e(this),r,i=e(n.attr("data-target")||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,"")),s=!i.data("modal")&&e.extend({},i.data(),n.data());i.carousel(s),t.preventDefault()})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.collapse.defaults,n),this.options.parent&&(this.$parent=e(this.options.parent)),this.options.toggle&&this.toggle()};t.prototype={constructor:t,dimension:function(){var e=this.$element.hasClass("width");return e?"width":"height"},show:function(){var t,n,r,i;if(this.transitioning)return;t=this.dimension(),n=e.camelCase(["scroll",t].join("-")),r=this.$parent&&this.$parent.find("> .accordion-group > .in");if(r&&r.length){i=r.data("collapse");if(i&&i.transitioning)return;r.collapse("hide"),i||r.data("collapse",null)}this.$element[t](0),this.transition("addClass",e.Event("show"),"shown"),this.$element[t](this.$element[0][n])},hide:function(){var t;if(this.transitioning)return;t=this.dimension(),this.reset(this.$element[t]()),this.transition("removeClass",e.Event("hide"),"hidden"),this.$element[t](0)},reset:function(e){var t=this.dimension();return this.$element.removeClass("collapse")[t](e||"auto")[0].offsetWidth,this.$element[e!==null?"addClass":"removeClass"]("collapse"),this},transition:function(t,n,r){var i=this,s=function(){n.type=="show"&&i.reset(),i.transitioning=0,i.$element.trigger(r)};this.$element.trigger(n);if(n.isDefaultPrevented())return;this.transitioning=1,this.$element[t]("in"),e.support.transition&&this.$element.hasClass("collapse")?this.$element.one(e.support.transition.end,s):s()},toggle:function(){this[this.$element.hasClass("in")?"hide":"show"]()}},e.fn.collapse=function(n){return this.each(function(){var r=e(this),i=r.data("collapse"),s=typeof n=="object"&&n;i||r.data("collapse",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.collapse.defaults={toggle:!0},e.fn.collapse.Constructor=t,e(function(){e("body").on("click.collapse.data-api","[data-toggle=collapse]",function(t){var n=e(this),r,i=n.attr("data-target")||t.preventDefault()||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,""),s=e(i).data("collapse")?"toggle":n.data();e(i).collapse(s)})})}(window.jQuery),!function(e){"use strict";function r(){e(t).parent().removeClass("open")}var t='[data-toggle="dropdown"]',n=function(t){var n=e(t).on("click.dropdown.data-api",this.toggle);e("html").on("click.dropdown.data-api",function(){n.parent().removeClass("open")})};n.prototype={constructor:n,toggle:function(t){var n=e(this),i,s,o;if(n.is(".disabled, :disabled"))return;return s=n.attr("data-target"),s||(s=n.attr("href"),s=s&&s.replace(/.*(?=#[^\s]*$)/,"")),i=e(s),i.length||(i=n.parent()),o=i.hasClass("open"),r(),o||i.toggleClass("open"),!1}},e.fn.dropdown=function(t){return this.each(function(){var r=e(this),i=r.data("dropdown");i||r.data("dropdown",i=new n(this)),typeof t=="string"&&i[t].call(r)})},e.fn.dropdown.Constructor=n,e(function(){e("html").on("click.dropdown.data-api",r),e("body").on("click.dropdown",".dropdown form",function(e){e.stopPropagation()}).on("click.dropdown.data-api",t,n.prototype.toggle)})}(window.jQuery),!function(e){"use strict";function n(){var t=this,n=setTimeout(function(){t.$element.off(e.support.transition.end),r.call(t)},500);this.$element.one(e.support.transition.end,function(){clearTimeout(n),r.call(t)})}function r(e){this.$element.hide().trigger("hidden"),i.call(this)}function i(t){var n=this,r=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var i=e.support.transition&&r;this.$backdrop=e('<div class="modal-backdrop '+r+'" />').appendTo(document.body),this.options.backdrop!="static"&&this.$backdrop.click(e.proxy(this.hide,this)),i&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),i?this.$backdrop.one(e.support.transition.end,t):t()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),e.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one(e.support.transition.end,e.proxy(s,this)):s.call(this)):t&&t()}function s(){this.$backdrop.remove(),this.$backdrop=null}function o(){var t=this;this.isShown&&this.options.keyboard?e(document).on("keyup.dismiss.modal",function(e){e.which==27&&t.hide()}):this.isShown||e(document).off("keyup.dismiss.modal")}var t=function(t,n){this.options=n,this.$element=e(t).delegate('[data-dismiss="modal"]',"click.dismiss.modal",e.proxy(this.hide,this))};t.prototype={constructor:t,toggle:function(){return this[this.isShown?"hide":"show"]()},show:function(){var t=this,n=e.Event("show");this.$element.trigger(n);if(this.isShown||n.isDefaultPrevented())return;e("body").addClass("modal-open"),this.isShown=!0,o.call(this),i.call(this,function(){var n=e.support.transition&&t.$element.hasClass("fade");t.$element.parent().length||t.$element.appendTo(document.body),t.$element.show(),n&&t.$element[0].offsetWidth,t.$element.addClass("in"),n?t.$element.one(e.support.transition.end,function(){t.$element.trigger("shown")}):t.$element.trigger("shown")})},hide:function(t){t&&t.preventDefault();var i=this;t=e.Event("hide"),this.$element.trigger(t);if(!this.isShown||t.isDefaultPrevented())return;this.isShown=!1,e("body").removeClass("modal-open"),o.call(this),this.$element.removeClass("in"),e.support.transition&&this.$element.hasClass("fade")?n.call(this):r.call(this)}},e.fn.modal=function(n){return this.each(function(){var r=e(this),i=r.data("modal"),s=e.extend({},e.fn.modal.defaults,r.data(),typeof n=="object"&&n);i||r.data("modal",i=new t(this,s)),typeof n=="string"?i[n]():s.show&&i.show()})},e.fn.modal.defaults={backdrop:!0,keyboard:!0,show:!0},e.fn.modal.Constructor=t,e(function(){e("body").on("click.modal.data-api",'[data-toggle="modal"]',function(t){var n=e(this),r,i=e(n.attr("data-target")||(r=n.attr("href"))&&r.replace(/.*(?=#[^\s]+$)/,"")),s=i.data("modal")?"toggle":e.extend({},i.data(),n.data());t.preventDefault(),i.modal(s)})})}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("tooltip",e,t)};t.prototype={constructor:t,init:function(t,n,r){var i,s;this.type=t,this.$element=e(n),this.options=this.getOptions(r),this.enabled=!0,this.options.trigger!="manual"&&(i=this.options.trigger=="hover"?"mouseenter":"focus",s=this.options.trigger=="hover"?"mouseleave":"blur",this.$element.on(i,this.options.selector,e.proxy(this.enter,this)),this.$element.on(s,this.options.selector,e.proxy(this.leave,this))),this.options.selector?this._options=e.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},getOptions:function(t){return t=e.extend({},e.fn[this.type].defaults,t,this.$element.data()),t.delay&&typeof t.delay=="number"&&(t.delay={show:t.delay,hide:t.delay}),t},enter:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);if(!n.options.delay||!n.options.delay.show)return n.show();clearTimeout(this.timeout),n.hoverState="in",this.timeout=setTimeout(function(){n.hoverState=="in"&&n.show()},n.options.delay.show)},leave:function(t){var n=e(t.currentTarget)[this.type](this._options).data(this.type);this.timeout&&clearTimeout(this.timeout);if(!n.options.delay||!n.options.delay.hide)return n.hide();n.hoverState="out",this.timeout=setTimeout(function(){n.hoverState=="out"&&n.hide()},n.options.delay.hide)},show:function(){var e,t,n,r,i,s,o;if(this.hasContent()&&this.enabled){e=this.tip(),this.setContent(),this.options.animation&&e.addClass("fade"),s=typeof this.options.placement=="function"?this.options.placement.call(this,e[0],this.$element[0]):this.options.placement,t=/in/.test(s),e.remove().css({top:0,left:0,display:"block"}).appendTo(t?this.$element:document.body),n=this.getPosition(t),r=e[0].offsetWidth,i=e[0].offsetHeight;switch(t?s.split(" ")[1]:s){case"bottom":o={top:n.top+n.height,left:n.left+n.width/2-r/2};break;case"top":o={top:n.top-i,left:n.left+n.width/2-r/2};break;case"left":o={top:n.top+n.height/2-i/2,left:n.left-r};break;case"right":o={top:n.top+n.height/2-i/2,left:n.left+n.width}}e.css(o).addClass(s).addClass("in")}},isHTML:function(e){return typeof e!="string"||e.charAt(0)==="<"&&e.charAt(e.length-1)===">"&&e.length>=3||/^(?:[^<]*<[\w\W]+>[^>]*$)/.exec(e)},setContent:function(){var e=this.tip(),t=this.getTitle();e.find(".tooltip-inner")[this.isHTML(t)?"html":"text"](t),e.removeClass("fade in top bottom left right")},hide:function(){function r(){var t=setTimeout(function(){n.off(e.support.transition.end).remove()},500);n.one(e.support.transition.end,function(){clearTimeout(t),n.remove()})}var t=this,n=this.tip();n.removeClass("in"),e.support.transition&&this.$tip.hasClass("fade")?r():n.remove()},fixTitle:function(){var e=this.$element;(e.attr("title")||typeof e.attr("data-original-title")!="string")&&e.attr("data-original-title",e.attr("title")||"").removeAttr("title")},hasContent:function(){return this.getTitle()},getPosition:function(t){return e.extend({},t?{top:0,left:0}:this.$element.offset(),{width:this.$element[0].offsetWidth,height:this.$element[0].offsetHeight})},getTitle:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-original-title")||(typeof n.title=="function"?n.title.call(t[0]):n.title),e},tip:function(){return this.$tip=this.$tip||e(this.options.template)},validate:function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},enable:function(){this.enabled=!0},disable:function(){this.enabled=!1},toggleEnabled:function(){this.enabled=!this.enabled},toggle:function(){this[this.tip().hasClass("in")?"hide":"show"]()}},e.fn.tooltip=function(n){return this.each(function(){var r=e(this),i=r.data("tooltip"),s=typeof n=="object"&&n;i||r.data("tooltip",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.tooltip.Constructor=t,e.fn.tooltip.defaults={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover",title:"",delay:0}}(window.jQuery),!function(e){"use strict";var t=function(e,t){this.init("popover",e,t)};t.prototype=e.extend({},e.fn.tooltip.Constructor.prototype,{constructor:t,setContent:function(){var e=this.tip(),t=this.getTitle(),n=this.getContent();e.find(".popover-title")[this.isHTML(t)?"html":"text"](t),e.find(".popover-content > *")[this.isHTML(n)?"html":"text"](n),e.removeClass("fade top bottom left right in")},hasContent:function(){return this.getTitle()||this.getContent()},getContent:function(){var e,t=this.$element,n=this.options;return e=t.attr("data-content")||(typeof n.content=="function"?n.content.call(t[0]):n.content),e},tip:function(){return this.$tip||(this.$tip=e(this.options.template)),this.$tip}}),e.fn.popover=function(n){return this.each(function(){var r=e(this),i=r.data("popover"),s=typeof n=="object"&&n;i||r.data("popover",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.popover.Constructor=t,e.fn.popover.defaults=e.extend({},e.fn.tooltip.defaults,{placement:"right",content:"",template:'<div class="popover"><div class="arrow"></div><div class="popover-inner"><h3 class="popover-title"></h3><div class="popover-content"><p></p></div></div></div>'})}(window.jQuery),!function(e){"use strict";function t(t,n){var r=e.proxy(this.process,this),i=e(t).is("body")?e(window):e(t),s;this.options=e.extend({},e.fn.scrollspy.defaults,n),this.$scrollElement=i.on("scroll.scroll.data-api",r),this.selector=(this.options.target||(s=e(t).attr("href"))&&s.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.$body=e("body"),this.refresh(),this.process()}t.prototype={constructor:t,refresh:function(){var t=this,n;this.offsets=e([]),this.targets=e([]),n=this.$body.find(this.selector).map(function(){var t=e(this),n=t.data("target")||t.attr("href"),r=/^#\w/.test(n)&&e(n);return r&&n.length&&[[r.position().top,n]]||null}).sort(function(e,t){return e[0]-t[0]}).each(function(){t.offsets.push(this[0]),t.targets.push(this[1])})},process:function(){var e=this.$scrollElement.scrollTop()+this.options.offset,t=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,n=t-this.$scrollElement.height(),r=this.offsets,i=this.targets,s=this.activeTarget,o;if(e>=n)return s!=(o=i.last()[0])&&this.activate(o);for(o=r.length;o--;)s!=i[o]&&e>=r[o]&&(!r[o+1]||e<=r[o+1])&&this.activate(i[o])},activate:function(t){var n,r;this.activeTarget=t,e(this.selector).parent(".active").removeClass("active"),r=this.selector+'[data-target="'+t+'"],'+this.selector+'[href="'+t+'"]',n=e(r).parent("li").addClass("active"),n.parent(".dropdown-menu")&&(n=n.closest("li.dropdown").addClass("active")),n.trigger("activate")}},e.fn.scrollspy=function(n){return this.each(function(){var r=e(this),i=r.data("scrollspy"),s=typeof n=="object"&&n;i||r.data("scrollspy",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.scrollspy.Constructor=t,e.fn.scrollspy.defaults={offset:10},e(function(){e('[data-spy="scroll"]').each(function(){var t=e(this);t.scrollspy(t.data())})})}(window.jQuery),!function(e){"use strict";var t=function(t){this.element=e(t)};t.prototype={constructor:t,show:function(){var t=this.element,n=t.closest("ul:not(.dropdown-menu)"),r=t.attr("data-target"),i,s,o;r||(r=t.attr("href"),r=r&&r.replace(/.*(?=#[^\s]*$)/,""));if(t.parent("li").hasClass("active"))return;i=n.find(".active a").last()[0],o=e.Event("show",{relatedTarget:i}),t.trigger(o);if(o.isDefaultPrevented())return;s=e(r),this.activate(t.parent("li"),n),this.activate(s,s.parent(),function(){t.trigger({type:"shown",relatedTarget:i})})},activate:function(t,n,r){function o(){i.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),t.addClass("active"),s?(t[0].offsetWidth,t.addClass("in")):t.removeClass("fade"),t.parent(".dropdown-menu")&&t.closest("li.dropdown").addClass("active"),r&&r()}var i=n.find("> .active"),s=r&&e.support.transition&&i.hasClass("fade");s?i.one(e.support.transition.end,o):o(),i.removeClass("in")}},e.fn.tab=function(n){return this.each(function(){var r=e(this),i=r.data("tab");i||r.data("tab",i=new t(this)),typeof n=="string"&&i[n]()})},e.fn.tab.Constructor=t,e(function(){e("body").on("click.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(t){t.preventDefault(),e(this).tab("show")})})}(window.jQuery),!function(e){"use strict";var t=function(t,n){this.$element=e(t),this.options=e.extend({},e.fn.typeahead.defaults,n),this.matcher=this.options.matcher||this.matcher,this.sorter=this.options.sorter||this.sorter,this.highlighter=this.options.highlighter||this.highlighter,this.updater=this.options.updater||this.updater,this.$menu=e(this.options.menu).appendTo("body"),this.source=this.options.source,this.shown=!1,this.listen()};t.prototype={constructor:t,select:function(){var e=this.$menu.find(".active").attr("data-value");return this.$element.val(this.updater(e)).change(),this.hide()},updater:function(e){return e},show:function(){var t=e.extend({},this.$element.offset(),{height:this.$element[0].offsetHeight});return this.$menu.css({top:t.top+t.height,left:t.left}),this.$menu.show(),this.shown=!0,this},hide:function(){return this.$menu.hide(),this.shown=!1,this},lookup:function(t){var n=this,r,i;return this.query=this.$element.val(),this.query?(r=e.grep(this.source,function(e){return n.matcher(e)}),r=this.sorter(r),r.length?this.render(r.slice(0,this.options.items)).show():this.shown?this.hide():this):this.shown?this.hide():this},matcher:function(e){return~e.toLowerCase().indexOf(this.query.toLowerCase())},sorter:function(e){var t=[],n=[],r=[],i;while(i=e.shift())i.toLowerCase().indexOf(this.query.toLowerCase())?~i.indexOf(this.query)?n.push(i):r.push(i):t.push(i);return t.concat(n,r)},highlighter:function(e){var t=this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");return e.replace(new RegExp("("+t+")","ig"),function(e,t){return"<strong>"+t+"</strong>"})},render:function(t){var n=this;return t=e(t).map(function(t,r){return t=e(n.options.item).attr("data-value",r),t.find("a").html(n.highlighter(r)),t[0]}),t.first().addClass("active"),this.$menu.html(t),this},next:function(t){var n=this.$menu.find(".active").removeClass("active"),r=n.next();r.length||(r=e(this.$menu.find("li")[0])),r.addClass("active")},prev:function(e){var t=this.$menu.find(".active").removeClass("active"),n=t.prev();n.length||(n=this.$menu.find("li").last()),n.addClass("active")},listen:function(){this.$element.on("blur",e.proxy(this.blur,this)).on("keypress",e.proxy(this.keypress,this)).on("keyup",e.proxy(this.keyup,this)),(e.browser.webkit||e.browser.msie)&&this.$element.on("keydown",e.proxy(this.keypress,this)),this.$menu.on("click",e.proxy(this.click,this)).on("mouseenter","li",e.proxy(this.mouseenter,this))},keyup:function(e){switch(e.keyCode){case 40:case 38:break;case 9:case 13:if(!this.shown)return;this.select();break;case 27:if(!this.shown)return;this.hide();break;default:this.lookup()}e.stopPropagation(),e.preventDefault()},keypress:function(e){if(!this.shown)return;switch(e.keyCode){case 9:case 13:case 27:e.preventDefault();break;case 38:if(e.type!="keydown")break;e.preventDefault(),this.prev();break;case 40:if(e.type!="keydown")break;e.preventDefault(),this.next()}e.stopPropagation()},blur:function(e){var t=this;setTimeout(function(){t.hide()},150)},click:function(e){e.stopPropagation(),e.preventDefault(),this.select()},mouseenter:function(t){this.$menu.find(".active").removeClass("active"),e(t.currentTarget).addClass("active")}},e.fn.typeahead=function(n){return this.each(function(){var r=e(this),i=r.data("typeahead"),s=typeof n=="object"&&n;i||r.data("typeahead",i=new t(this,s)),typeof n=="string"&&i[n]()})},e.fn.typeahead.defaults={source:[],items:8,menu:'<ul class="typeahead dropdown-menu"></ul>',item:'<li><a href="#"></a></li>'},e.fn.typeahead.Constructor=t,e(function(){e("body").on("focus.typeahead.data-api",'[data-provide="typeahead"]',function(t){var n=e(this);if(n.data("typeahead"))return;t.preventDefault(),n.typeahead(n.data())})})}(window.jQuery);
(function(){$(function(){var e,t,n,r;return n=function(e,t){var n;return n=Semper.parse(e),Semper.expand(n,null,t)},r=function(e){var t,r,i,s,o,u;console.log("updating"),t=e.siblings(".json"),u=t.val()||"{}",r=e.closest(".row").find("textarea.html"),e.closest(".row").find("textarea").removeClass("error");try{i=JSON.parse(u)}catch(a){t.addClass("error"),r.val("[json] "+a.message).addClass("error");return}o=e.val();try{console.log(o),s=n(o,i)}catch(a){e.addClass("error"),r.val("[semper] "+a.message).addClass("error");return}return s=s.trim(),r.val(s)},$("textarea.semper").each(function(){return r($(this).on("keyup",function(){return r($(this))}))}),$("textarea.json").on("keyup",function(){return r($(this).siblings(".semper"))}),$("#basics .row").addClass("annotate"),$.fn.tabOverride.autoIndent=!0,$.fn.tabOverride.tabSize(2),$("textarea").tabOverride(),t=$(".subnav").length&&$(".subnav").offset().top,e=0,$(window).on("scroll",function(){var n,r;n=void 0,r=$(window).scrollTop();if(r>=t&&!e)return e=1,$(".subnav").addClass("subnav-fixed");if(r<=t&&e)return e=0,$(".subnav").removeClass("subnav-fixed")})})}).call(this);
jQuery.fn.tabOverride=function(e){function u(e){var r=e.keyCode,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T;if(r!==9&&(r!==13||!o.autoIndent)||e.ctrlKey||e.altKey)return;n=!1,f=this.value,d=this.scrollTop;if(document.selection)l=document.selection.createRange(),g=l.text,c=l.duplicate(),c.moveToElementText(this),c.setEndPoint("EndToEnd",l),m=c.text.length,v=m-g.length,s>1?(h=f.slice(0,v).split(i).length-1,p=g.split(i).length-1):h=p=0;else{if(typeof this.selectionStart=="undefined")return;v=this.selectionStart,m=this.selectionEnd,g=f.slice(v,m)}if(r===9)u=t,a=u.length,w=0,E=0,S=0,v!==m&&g.indexOf("\n")!==-1?(v===0||f.charAt(v-1)==="\n"?y=v:y=f.lastIndexOf("\n",v-1)+1,m===f.length||f.charAt(m)==="\n"?b=m:(b=f.indexOf("\n",m),b===-1&&(b=f.length)),e.shiftKey?(f.slice(y).indexOf(u)===0&&(y===v?g=g.slice(a):S=a,E=a),this.value=f.slice(0,y)+f.slice(y+S,v)+g.replace(new RegExp("\n"+u,"g"),function(){return w+=1,"\n"})+f.slice(m),l?(l.collapse(),l.moveEnd("character",m-E-w*a-p-h),l.moveStart("character",v-S-h),l.select()):(this.selectionStart=v-S,this.selectionEnd=m-E-w*a)):(w=1,this.value=f.slice(0,y)+u+f.slice(y,v)+g.replace(/\n/g,function(){return w+=1,"\n"+u})+f.slice(m),l?(l.collapse(),l.moveEnd("character",m+w*a-p-h),l.moveStart("character",v+a-h),l.select()):(this.selectionStart=v+a,this.selectionEnd=m+w*a,this.scrollTop=d))):e.shiftKey?f.slice(v-a).indexOf(u)===0&&(this.value=f.slice(0,v-a)+f.slice(v),l?(l.move("character",v-a-h),l.select()):(this.selectionEnd=this.selectionStart=v-a,this.scrollTop=d)):l?(l.text=u,l.select()):(this.value=f.slice(0,v)+u+f.slice(m),this.selectionEnd=this.selectionStart=v+a,this.scrollTop=d);else if(o.autoIndent){if(v===0||f.charAt(v-1)==="\n"){n=!0;return}y=f.lastIndexOf("\n",v-1)+1,b=f.indexOf("\n",v),b===-1&&(b=f.length),x=f.slice(y,b).match(/^[ \t]*/)[0],T=x.length;if(v<y+T){n=!0;return}l?(l.text="\n"+x,l.select()):(this.value=f.slice(0,v)+"\n"+x+f.slice(m),this.selectionEnd=this.selectionStart=v+s+T,this.scrollTop=d)}e.preventDefault()}function a(e){var t=e.keyCode;(t===9||t===13&&o.autoIndent&&!n)&&!e.ctrlKey&&!e.altKey&&e.preventDefault()}var t="	",n=!1,r=document.createElement("textarea"),i,s,o;return o=function(t){return this.each(function(){e(this).unbind(".tabOverride")}),(!arguments.length||t)&&this.each(function(){this.nodeName&&this.nodeName.toLowerCase()==="textarea"&&e(this).bind("keydown.tabOverride",u).bind("keypress.tabOverride",a)}),this},o.getTabSize=function(){return o.tabSize()},o.setTabSize=function(e){o.tabSize(e)},o.tabSize=function(e){if(!arguments.length)return t==="	"?0:t.length;var n;if(!e)t="	";else if(typeof e=="number"&&e>0){t="";for(n=0;n<e;n+=1)t+=" "}},o.autoIndent=!1,r.value="\n",i=r.value,s=i.length,r=null,o}(jQuery);